pipeline {
    agent any
    options {
        skipDefaultCheckout true
    }
    stages {
	stage('Checkout scm'){
		steps{
checkout scmGit(branches: [[name: '*/main']], extensions: [[$class: 'PathRestriction', excludedRegions: '''Folder6/.*
Folder5/.*
Folder3/.*
Folder2/.*
Folder1/.*''', includedRegions: 'Folder4/.*'], [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'Folder4/']]]], userRemoteConfigs: [[url: 'https://github.com/TVDAnilov/PollingPartProject_in_Jenkins.git']])
		}
	}
        stage('Приветствие') {
            steps {
                powershell 'Write-Host "Привет, мир!"'
            }
        }

        stage('Сборка') {
            steps {
                powershell 'Write-Host "Выполняется сборка...!"'
                // Добавьте команды для сборки вашего проекта
            }
        }

        stage('Тесты') {
            steps {
                powershell 'Write-Host "Выполняются тесты...!"'
                // Добавьте команды для запуска тестов!
            }
        }
stage('Service Management') {
            parallel {
                stage('Service Tasks') {
                    steps {
                        script {
                            parallel(
                                "Stop Service on Computer 1": {
                                    node('agent1') {
                                        powershell '''
                                        Write-Output "Stopping service on Computer 1"
                                        Stop-Service -Name 'ServiceName' -Force
                                        '''
                                    }
                                },
                                "Stop Service on Computer 2": {
                                    node('agent2') {
                                        powershell '''
                                        Write-Output "Stopping service on Computer 2"
                                        Stop-Service -Name 'ServiceName' -Force
                                        '''
                                    }
                                },
                                "Stop Service on Computer 3": {
                                    node('agent3') {
                                        powershell '''
                                        Write-Output "Stopping service on Computer 3"
                                        Stop-Service -Name 'ServiceName' -Force
                                        '''
                                    }
                                }
                                // Добавьте дополнительные этапы для других компьютеров
                            )
                        }
                    }
                }
            }
        }

    }
        post('Сообщение после сборки') {
            success{
                archiveArtifacts artifacts: '/**/*', followSymlinks: false
                powershell 'Write-Host "Сборка завершена!"'
                // Добавьте команды для отправки сообщения после сборки
            }
        }
        
    
}